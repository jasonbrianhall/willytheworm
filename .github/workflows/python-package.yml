name: Build and Release Willy the Worm

on:
  push:
    branches:
      - main
      - dev

jobs:
  create-source-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Source Archive
        run: |
          zip -r willy-the-worm-source.zip . -x '*.git*'
      
      - name: Upload Source Archive
        uses: actions/upload-artifact@v3
        with:
          name: source-package
          path: willy-the-worm-source.zip

  build-windows-installer:
    runs-on: windows-latest
    needs: create-source-release
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install cx_Freeze
          pip install wheel setuptools

      - name: Create Windows Executables
        run: |
          pyinstaller --onefile --add-data "levels.json;." --add-data "original_levels.json;." --add-data "willy.chr;." --add-data "audio/*;audio/" willy.py
          pyinstaller --onefile --add-data "levels.json;." --add-data "original_levels.json;." --add-data "willy.chr;." --add-data "audio/*;audio/" edwilly.py

      - name: Install WiX Toolset
        run: |
          mkdir wix
          cd wix
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile "wix311-binaries.zip"
          Expand-Archive wix311-binaries.zip -DestinationPath .
          echo "$pwd" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Create MSI Installer
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>
          <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
            <Product Id="*" Name="Willy the Worm" Language="1033" Version="1.0.0" Manufacturer="Jason Hall" UpgradeCode="12345678-1234-1234-1234-123456789012">
              <Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine" />
              <MajorUpgrade DowngradeErrorMessage="A newer version is already installed." />
              <MediaTemplate EmbedCab="yes" />
              <Feature Id="ProductFeature" Title="WillyTheWorm" Level="1">
                <ComponentGroupRef Id="ProductComponents" />
              </Feature>
              <Directory Id="TARGETDIR" Name="SourceDir">
                <Directory Id="ProgramFilesFolder">
                  <Directory Id="INSTALLFOLDER" Name="WillyTheWorm">
                    <Component Id="MainExecutable" Guid="12345678-1234-1234-1234-123456789012">
                      <File Id="WillyEXE" Name="willy.exe" Source="dist/willy/willy.exe" KeyPath="yes" />
                      <File Id="EdWillyEXE" Name="edwilly.exe" Source="dist/edwilly/edwilly.exe" />
                      <File Id="OriginalLevels" Name="original_levels.json" Source="original_levels.json" />
                    </Component>
                  </Directory>
                </Directory>
              </Directory>
            </Product>
          </Wix>' > installer.wxs

          candle installer.wxs
          light installer.wixobj -out WillyTheWorm.msi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: WillyTheWorm.msi

  create-release:
    needs: build-windows-installer
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Source Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./source-package/willy-the-worm-source.zip
          asset_name: willy-the-worm-source.zip
          asset_content_type: application/zip

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-installer/WillyTheWorm.msi
          asset_name: WillyTheWorm.msi
          asset_content_type: application/x-msi
